	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.0\bin\/../open64/lib//be.exe
	// nvopencc 4.0 built on 2011-05-13

	//-----------------------------------------------------------
	// Compiling C:/Users/M/AppData/Local/Temp/tmpxft_00000434_00000000-11_Rule184.cpp3.i (C:/Users/M/AppData/Local/Temp/ccBI#.a00832)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"C:/Users/M/AppData/Local/Temp/tmpxft_00000434_00000000-10_Rule184.cudafe2.gpu"
	.file	2	"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\amd64\/../../../VC/\INCLUDE\crtdefs.h"
	.file	3	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.0\bin\/../include\crt/device_runtime.h"
	.file	4	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.0\bin\/../include\host_defines.h"
	.file	5	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.0\bin\/../include\builtin_types.h"
	.file	6	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\device_types.h"
	.file	7	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\driver_types.h"
	.file	8	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\surface_types.h"
	.file	9	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\texture_types.h"
	.file	10	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\vector_types.h"
	.file	11	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\builtin_types.h"
	.file	12	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\host_defines.h"
	.file	13	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.0\bin\/../include\device_launch_parameters.h"
	.file	14	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\crt\storage_class.h"
	.file	15	"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\amd64\/../../../VC/\INCLUDE\time.h"
	.file	16	"Rule184.cu"
	.file	17	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.0\bin\/../include\common_functions.h"
	.file	18	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\math_functions.h"
	.file	19	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\math_constants.h"
	.file	20	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\device_functions.h"
	.file	21	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\sm_11_atomic_functions.h"
	.file	22	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\sm_12_atomic_functions.h"
	.file	23	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\sm_13_double_functions.h"
	.file	24	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\sm_20_atomic_functions.h"
	.file	25	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\sm_20_intrinsics.h"
	.file	26	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\surface_functions.h"
	.file	27	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\texture_fetch_functions.h"
	.file	28	"c:\program files\nvidia gpu computing toolkit\cuda\v4.0\include\math_functions_dbl_ptx1.h"


	.entry move (
		.param .s32 __cudaparm_move_n,
		.param .s32 __cudaparm_move_time,
		.param .u64 __cudaparm_move_a)
	{
	.reg .u16 %rh<4>;
	.reg .u32 %r<44>;
	.reg .u64 %rd<9>;
	.reg .pred %p<7>;
	.loc	16	6	0
$LDWbegin_move:
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	cvt.u32.u16 	%r2, %tid.x;
	add.u32 	%r3, %r2, %r1;
	mul.lo.s32 	%r4, %r3, 2;
	ld.param.s32 	%r5, [__cudaparm_move_n];
	add.s32 	%r6, %r4, 1;
	set.gt.u32.s32 	%r7, %r5, %r6;
	neg.s32 	%r8, %r7;
	mov.s32 	%r9, 2;
	set.gt.u32.s32 	%r10, %r3, %r9;
	neg.s32 	%r11, %r10;
	and.b32 	%r12, %r8, %r11;
	mov.u32 	%r13, 0;
	setp.eq.s32 	%p1, %r12, %r13;
	@%p1 bra 	$Lt_0_4610;
	.loc	16	9	0
	ld.param.s32 	%r14, [__cudaparm_move_time];
	ld.param.u64 	%rd1, [__cudaparm_move_a];
	add.s32 	%r15, %r4, %r14;
	cvt.s64.s32 	%rd2, %r15;
	mul.wide.s32 	%rd3, %r15, 4;
	add.u64 	%rd4, %rd1, %rd3;
	ld.global.s8 	%r16, [%rd4+-8];
	.loc	16	10	0
	ld.global.s8 	%r17, [%rd4+0];
	.loc	16	11	0
	ld.global.s8 	%r18, [%rd4+8];
	.loc	16	12	0
	mov.s32 	%r19, 0;
	setp.ne.s32 	%p2, %r18, %r19;
	mov.s32 	%r20, 0;
	setp.ne.s32 	%p3, %r16, %r20;
	mov.s32 	%r21, 0;
	setp.ne.s32 	%p4, %r17, %r21;
	mov.s32 	%r22, 0;
	setp.eq.s32 	%p5, %r17, %r22;
	selp.s32 	%r23, 1, 0, %p2;
	selp.s32 	%r24, 1, 0, %p3;
	selp.s32 	%r25, 1, 0, %p4;
	selp.s32 	%r26, 1, 0, %p5;
	and.b32 	%r27, %r24, %r26;
	and.b32 	%r28, %r24, %r25;
	or.b32 	%r29, %r27, %r28;
	and.b32 	%r30, %r23, %r29;
	mov.s32 	%r31, 0;
	set.eq.u32.s32 	%r32, %r18, %r31;
	neg.s32 	%r33, %r32;
	and.b32 	%r34, %r33, %r27;
	mov.s32 	%r35, 0;
	set.eq.u32.s32 	%r36, %r16, %r35;
	neg.s32 	%r37, %r36;
	and.b32 	%r38, %r37, %r25;
	and.b32 	%r39, %r23, %r38;
	or.b32 	%r40, %r34, %r39;
	or.b32 	%r41, %r30, %r40;
	sub.s32 	%r42, %r4, %r14;
	cvt.s64.s32 	%rd5, %r42;
	mul.wide.s32 	%rd6, %r42, 4;
	add.u64 	%rd7, %rd1, %rd6;
	st.global.s32 	[%rd7+4], %r41;
$Lt_0_4610:
	.loc	16	14	0
	exit;
$LDWend_move:
	} // move

